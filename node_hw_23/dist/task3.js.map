{"version":3,"file":"task3.js","sourceRoot":"","sources":["../src/task3.ts"],"names":[],"mappings":";AAAA,YAAY;AACZ,2CAA2C;AAC3C,sFAAsF;AACtF,0EAA0E;AAC1E,sDAAsD;AACtD,wCAAwC;AAExC,SAAS,cAAc,CAAC,EAAU,EAAE,KAAa;IAC/C,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;QAC7B,UAAU,CAAC,GAAG,EAAE;YACd,OAAO,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;QACpC,CAAC,EAAE,KAAK,CAAC,CAAC;IACZ,CAAC,CAAC,CAAC;AACL,CAAC;AAED,SAAS,cAAc,CAAC,EAAU,EAAE,KAAa;IAC/C,OAAO,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE;QAC/B,UAAU,CAAC,GAAG,EAAE;YACd,MAAM,CAAC,IAAI,KAAK,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC,CAAC;QAC9C,CAAC,EAAE,KAAK,CAAC,CAAC;IACZ,CAAC,CAAC,CAAC;AACL,CAAC;AAED,KAAK,UAAU,cAAc;IAC3B,IAAI,CAAC;QACH,MAAM,OAAO,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;YAChC,cAAc,CAAC,CAAC,EAAE,IAAI,CAAC;YACvB,cAAc,CAAC,CAAC,EAAE,IAAI,CAAC;YACvB,cAAc,CAAC,CAAC,EAAE,IAAI,CAAC;SACxB,CAAC,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,OAAO,CAAC,CAAC;IACjD,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,iBAAiB,EAAG,KAAe,CAAC,OAAO,CAAC,CAAC;IAC7D,CAAC;AACH,CAAC;AAED,cAAc,EAAE,CAAC","sourcesContent":["// Задание 3\n// Обработка ошибки в параллельных промисах\n// Напишите функцию, которая вызывает три промиса параллельно с помощью `Promise.all`.\n// Один из промисов должен намеренно завершиться с ошибкой через `reject`.\n// Обработайте эту ошибку с использованием `try/catch`\n// и выведите соответствующее сообщение.\n\nfunction promiseSuccess(id: number, delay: number): Promise<string> {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(`Promise ${id} resolved`);\n    }, delay);\n  });\n}\n\nfunction promiseFailure(id: number, delay: number): Promise<string> {\n  return new Promise((_, reject) => {\n    setTimeout(() => {\n      reject(new Error(`Promise ${id} rejected`));\n    }, delay);\n  });\n}\n\nasync function handlePromises() {\n  try {\n    const results = await Promise.all([\n      promiseSuccess(1, 1000),\n      promiseFailure(2, 1500),\n      promiseSuccess(3, 2000),\n    ]);\n    console.log('All promises resolved:', results);\n  } catch (error) {\n    console.error('Error occurred:', (error as Error).message);\n  }\n}\n\nhandlePromises();\n"]}