{"version":3,"file":"app.js","sourceRoot":"","sources":["../src/app.ts"],"names":[],"mappings":";AAAA,YAAY;AACZ,uCAAuC;AACvC,yGAAyG;AACzG,oFAAoF;AACpF,iGAAiG;AACjG,wEAAwE;AAExE,MAAM,MAAM;IACV,IAAI,CAAS;IACb,OAAO,CAAS;IAEhB,YAAY,IAAY,EAAE,OAAe;QACvC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IAED,KAAK;QACH,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;IAC1C,CAAC;CACF;AAED,MAAM,GAAI,SAAQ,MAAM;IACtB,KAAK,CAAS;IAEd,YAAY,IAAY,EAAE,OAAe,EAAE,KAAa;QACtD,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAED,KAAK;QACH,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;IAC/B,CAAC;CACF;AAED,MAAM,QAAQ,GAAG,IAAI,MAAM,CAAC,gBAAgB,EAAE,iBAAiB,CAAC,CAAC;AACjE,QAAQ,CAAC,KAAK,EAAE,CAAC;AAEjB,MAAM,KAAK,GAAG,IAAI,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,kBAAkB,CAAC,CAAC;AAC7D,KAAK,CAAC,KAAK,EAAE,CAAC;AACd,OAAO,CAAC,GAAG,CACT,eAAe,KAAK,CAAC,IAAI,cAAc,KAAK,CAAC,OAAO,YAAY,KAAK,CAAC,KAAK,EAAE,CAC9E,CAAC;AAEF,YAAY;AACZ,2CAA2C;AAC3C,qGAAqG;AACrG,iEAAiE;AACjE,kFAAkF;AAClF,wFAAwF;AAExF,MAAM,OAAO;IACX,MAAM,CAAC,UAAU,GAAW,CAAC,CAAC;IAE9B,MAAM,CAAC,OAAO;QACZ,OAAO,CAAC,UAAU,IAAI,CAAC,CAAC;IAC1B,CAAC;;AAGH,OAAO,CAAC,OAAO,EAAE,CAAC;AAClB,OAAO,CAAC,OAAO,EAAE,CAAC;AAClB,OAAO,CAAC,OAAO,EAAE,CAAC;AAElB,OAAO,CAAC,GAAG,CAAC,2BAA2B,OAAO,CAAC,UAAU,EAAE,CAAC,CAAC;AAE7D,YAAY;AACZ,kDAAkD;AAClD,yFAAyF;AACzF,6DAA6D;AAC7D,uGAAuG;AACvG,oEAAoE;AACpE,yEAAyE;AAEzE,MAAM,OAAO;IACX,IAAI,CAAS;IACb,KAAK,CAAS;IAEd,YAAY,IAAY,EAAE,KAAa;QACrC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;CACF;AAED,MAAM,UAAW,SAAQ,OAAO;IAC9B,IAAI,CAAS;IAEb,YAAY,IAAY,EAAE,KAAa,EAAE,IAAY;QACnD,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;CACF;AAED,MAAM,SAAS,GAAG,IAAI,OAAO,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;AACnD,OAAO,CAAC,GAAG,CAAC,iBAAiB,SAAS,CAAC,IAAI,YAAY,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC;AAE1E,MAAM,YAAY,GAAG,IAAI,UAAU,CAAC,iBAAiB,EAAE,YAAY,EAAE,SAAS,CAAC,CAAC;AAChF,OAAO,CAAC,GAAG,CACT,oBAAoB,YAAY,CAAC,IAAI,YAAY,YAAY,CAAC,KAAK,WAAW,YAAY,CAAC,IAAI,EAAE,CAClG,CAAC","sourcesContent":["// Задание 1\n// Класс `Animal` и его наследник `Dog`\n// Создайте класс `Animal`, который содержит свойства `name` (имя животного) и `species` (вид животного).\n// Добавьте метод `sound()`, который выводит в консоль `\"The animal makes a sound\"`.\n// Затем создайте класс-наследник `Dog`, который добавляет новое свойство `breed` (порода собаки)\n// и переопределяет метод `sound()`, чтобы он выводил `\"The dog barks\"`.\n\nclass Animal {\n  name: string;\n  species: string;\n\n  constructor(name: string, species: string) {\n    this.name = name;\n    this.species = species;\n  }\n\n  sound(): void {\n    console.log('The animal makes a sound');\n  }\n}\n\nclass Dog extends Animal {\n  breed: string;\n\n  constructor(name: string, species: string, breed: string) {\n    super(name, species);\n    this.breed = breed;\n  }\n\n  sound(): void {\n    console.log('The dog barks');\n  }\n}\n\nconst myAnimal = new Animal('Generic Animal', 'Unknown Species');\nmyAnimal.sound();\n\nconst myDog = new Dog('Buddy', 'Canine', 'Golden Retriever');\nmyDog.sound();\nconsole.log(\n  `Dog's name: ${myDog.name}, Species: ${myDog.species}, Breed: ${myDog.breed}`\n);\n\n// Задание 2\n// Статическое свойство для учета всех книг\n// Создайте класс `Library`, который имеет статическое свойство `totalBooks` (общее количество книг).\n// При каждом добавлении книги это свойство должно увеличиваться.\n// В классе также должен быть метод `addBook()`, который увеличивает счетчик книг.\n// Создайте несколько объектов класса и проверьте, как изменяется общее количество книг.\n\nclass Library {\n  static totalBooks: number = 0;\n\n  static addBook(): void {\n    Library.totalBooks += 1;\n  }\n}\n\nLibrary.addBook();\nLibrary.addBook();\nLibrary.addBook();\n\nconsole.log(`Total books in library: ${Library.totalBooks}`);\n\n// Задание 3\n// Переопределение конструктора в классе `Vehicle`\n// Создайте класс `Vehicle`, который содержит свойства `make` (марка) и `model` (модель).\n// Добавьте конструктор, который инициализирует эти свойства.\n// Затем создайте класс-наследник `Motorcycle`, который добавляет новое свойство `type` (тип мотоцикла)\n// и переопределяет конструктор для инициализации всех трех свойств.\n// Убедитесь, что данные правильно инициализируются при создании объекта.\n\nclass Vehicle {\n  make: string;\n  model: string;\n\n  constructor(make: string, model: string) {\n    this.make = make;\n    this.model = model;\n  }\n}\n\nclass Motorcycle extends Vehicle {\n  type: string;\n\n  constructor(make: string, model: string, type: string) {\n    super(make, model);\n    this.type = type;\n  }\n}\n\nconst myVehicle = new Vehicle('Toyota', 'Corolla');\nconsole.log(`Vehicle Make: ${myVehicle.make}, Model: ${myVehicle.model}`);\n\nconst myMotorcycle = new Motorcycle('Harley-Davidson', 'Street 750', 'Cruiser');\nconsole.log(\n  `Motorcycle Make: ${myMotorcycle.make}, Model: ${myMotorcycle.model}, Type: ${myMotorcycle.type}`\n);\n"]}