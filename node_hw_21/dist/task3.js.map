{"version":3,"file":"task3.js","sourceRoot":"","sources":["../src/task3.ts"],"names":[],"mappings":";AAAA,YAAY;AACZ,8BAA8B;AAC9B,2FAA2F;AAC3F,2DAA2D;AAC3D,6EAA6E;AAC7E,oCAAoC;AACpC,iGAAiG;AACjG,mEAAmE;AAEnE,MAAe,SAAS;CAGvB;AAED,MAAM,cAAe,SAAQ,SAAS;IACpC,MAAM;QACJ,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;IAC5C,CAAC;IAED,OAAO;QACL,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;IAC7C,CAAC;CACF;AAED,MAAM,YAAa,SAAQ,SAAS;IAClC,MAAM;QACJ,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;IACzC,CAAC;IAED,OAAO;QACL,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;IAC1C,CAAC;CACF;AAED,MAAM,eAAe,GAAgB,CAAC,IAAI,cAAc,EAAE,EAAE,IAAI,YAAY,EAAE,CAAC,CAAC;AAEhF,eAAe,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,EAAE;IACpC,SAAS,CAAC,MAAM,EAAE,CAAC;IACnB,SAAS,CAAC,OAAO,EAAE,CAAC;AACtB,CAAC,CAAC,CAAC","sourcesContent":["// Задание 3\n// Абстрактный класс Appliance\n// Создайте абстрактный класс `Appliance` с абстрактными методами `turnOn()` и `turnOff()`.\n// Затем создайте классы `WashingMachine` и `Refrigerator`,\n// которые наследуют `Appliance` и реализуют методы `turnOn()` и `turnOff()`,\n// выводя соответствующие сообщения.\n// Создайте массив типа `Appliance[]`, добавьте в него объекты `WashingMachine` и `Refrigerator`,\n// и вызовите методы `turnOn()` и `turnOff()` для каждого элемента.\n\nabstract class Appliance {\n  abstract turnOn(): void;\n  abstract turnOff(): void;\n}\n\nclass WashingMachine extends Appliance {\n  turnOn(): void {\n    console.log('Washing Machine is now ON.');\n  }\n\n  turnOff(): void {\n    console.log('Washing Machine is now OFF.');\n  }\n}\n\nclass Refrigerator extends Appliance {\n  turnOn(): void {\n    console.log('Refrigerator is now ON.');\n  }\n\n  turnOff(): void {\n    console.log('Refrigerator is now OFF.');\n  }\n}\n\nconst appliancesArray: Appliance[] = [new WashingMachine(), new Refrigerator()];\n\nappliancesArray.forEach((appliance) => {\n  appliance.turnOn();\n  appliance.turnOff();\n});\n"]}