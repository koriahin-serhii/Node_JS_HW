{"version":3,"file":"app.js","sourceRoot":"","sources":["../src/app.ts"],"names":[],"mappings":";AAAA,YAAY;AACZ,gDAAgD;AAChD,uEAAuE;AAEvE,MAAM,cAAc,GAAG,CAAC,OAAiB,EAAE,EAAE;IAC3C,OAAO,OAAO;SACX,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC;SAC9B,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,GAAG,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC;AACF,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAWhD,MAAM,aAAa,GAA4B,CAAC,KAAa,EAAE,EAAE;IAC/D,OAAO,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC;AACnC,CAAC,CAAC;AACF,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;AAC/B,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;AASpC,MAAM,eAAe,GAAmB,CAAC,IAAY,EAAE,IAAY,EAAE,EAAE;IACrE,OAAO,IAAI,KAAK,IAAI,CAAC;AACvB,CAAC,CAAC;AACF,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;AAC7C,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;AAE7C,YAAY;AACZ,gDAAgD;AAChD,qFAAqF;AAErF,MAAM,cAAc,GAAG,CAAI,GAAQ,EAAiB,EAAE;IACpD,OAAO,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;AAC1D,CAAC,CAAC;AACF,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AAC7C,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC;AAEhC,YAAY;AACZ,6CAA6C;AAC7C,0FAA0F;AAE1F,MAAM,UAAU,GAAG,CAAI,CAAI,EAAE,CAAI,EAAE,CAAI,EAAO,EAAE;IAC9C,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC;AACF,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACjC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;AACvC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC","sourcesContent":["// Задание 1\n// Напишите стрелочную функцию `sumEvenNumbers`,\n// которая принимает массив чисел и возвращает сумму всех четных чисел.\n\nconst sumEvenNumbers = (numbers: number[]) => {\n  return numbers\n    .filter((num) => num % 2 === 0)\n    .reduce((acc, curr) => acc + curr, 0);\n};\nconsole.log(sumEvenNumbers([1, 2, 3, 4, 5, 6]));\n\n// Задание 2\n// Определите интерфейс `StringToBooleanFunction` для функции,\n// которая принимает строку и возвращает `boolean` (например, проверяет, является ли строка пустой).\n// Реализуйте такую функцию.\n\ninterface StringToBooleanFunction {\n  (input: string): boolean;\n}\n\nconst isEmptyString: StringToBooleanFunction = (input: string) => {\n  return input.trim().length === 0;\n};\nconsole.log(isEmptyString(''));\nconsole.log(isEmptyString('Hello'));\n\n// Задание 3\n// Создайте тип `CompareStrings` для функции, принимающей две строки и возвращающей `boolean`\n// (например, для проверки равенства строк).\n// Напишите функцию, соответствующую этому типу.\n\ntype CompareStrings = (str1: string, str2: string) => boolean;\n\nconst areStringsEqual: CompareStrings = (str1: string, str2: string) => {\n  return str1 === str2;\n};\nconsole.log(areStringsEqual('test', 'test'));\nconsole.log(areStringsEqual('test', 'Test'));\n\n// Задание 4\n// Напишите обобщенную функцию `getLastElement`,\n// которая принимает массив любого типа и возвращает последний элемент этого массива.\n\nconst getLastElement = <T>(arr: T[]): T | undefined => {\n  return arr.length > 0 ? arr[arr.length - 1] : undefined;\n};\nconsole.log(getLastElement([1, 2, 3, 4]));\nconsole.log(getLastElement(['a', 'b', 'c']));\nconsole.log(getLastElement([]));\n\n// Задание 5\n// Создайте обобщенную функцию `make Triple`,\n// которая принимает три аргумента одного типа и возвращает массив из этих трёх элементов.\n\nconst makeTriple = <T>(a: T, b: T, c: T): T[] => {\n  return [a, b, c];\n};\nconsole.log(makeTriple(1, 2, 3));\nconsole.log(makeTriple('x', 'y', 'z'));\nconsole.log(makeTriple(true, false, true));\n"]}